version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "5440:5432"
    environment:
      - POSTGRES_USER=david
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=university
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U david -d university'"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2182:2181"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 2182" ]
      retries: 20
      interval: 10s
    environment:
      - ZOOKEEPER_CLIENT_PORT=2182
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 9092" ]
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2182
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 8081" ]
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2182

