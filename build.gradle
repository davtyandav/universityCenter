import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.davdavtyan'
version = '0.0.1-SNAPSHOT'
description = 'UniversityCenter'
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.confluent:kafka-avro-serializer:7.5.0'
    implementation 'org.apache.avro:avro:1.11.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source('src/main/resources/avro')
    outputDir = file('src/main/java')
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

avro {
    createSetters = true
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
}

tasks.named('test') {
    useJUnitPlatform()
}
